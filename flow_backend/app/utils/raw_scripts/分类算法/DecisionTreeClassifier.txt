# -*-coding:utf8-*-
import pandas as pd
import numpy as np
from  sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.tree import DecisionTreeClassifier

#1.数据获取
data = pd.read_csv(%(in_path_训练数据)s, header=None, sep=',')
x=data.iloc[:,:-1]#train_data
y=data.iloc[:,-1]#train_target

#2.数据随机划分。默认0.25
X_train,X_test,y_train,y_test=train_test_split(x,y,random_state=1)

#3.使用模型训练
lsvc = DecisionTreeClassifier(criterion=%(criterion)s,splitter=%(splitter)s,max_depth=%(max_depth)s,min_samples_split=%(min_samples_split)d,min_samples_leaf=%(min_samples_leaf)d,min_weight_fraction_leaf=%(min_weight_fraction_leaf)f,max_features=%(max_features)s,random_state=%(random_state)s,max_leaf_nodes=%(max_leaf_nodes)s,min_impurity_decrease=%(min_impurity_decrease)f,min_impurity_split=%(min_impurity_split)s,class_weight=%(class_weight)s,presort=%(presort)s,ccp_alpha=%(ccp_alpha)f)                      # 实例化模型
lsvc.fit(X_train,y_train)                # 进行模型训练
y_predict = lsvc.predict(X_test)
 
#4.生成结果
print (lsvc.score(X_test,y_test))   # 使用自带的模型评估函数进行准确性评测


result=lsvc.score(X_test,y_test)
result=[result]
np.savetxt(%(out_path_结果)s,result,fmt='%%f',delimiter=',')



