# -*-coding:utf8-*-
import pandas as pd
import numpy as np
from  sklearn.model_selection import train_test_split
from sklearn.preprocessing import StandardScaler
from sklearn.linear_model import LogisticRegression
from sklearn.metrics import mean_squared_error, r2_score
#1.数据获取
data = pd.read_csv(%(in_path_训练数据)s, header=None, sep=',')
x=data.iloc[:,:-1]#train_data
y=data.iloc[:,-1]#train_target

#2.数据随机划分。默认0.25
X_train,X_test,y_train,y_test=train_test_split(x,y,random_state=1)

#3.使用模型训练
lsvc = LogisticRegression(penalty=%(penalty)s,dual=%(dual)s,tol=%(tol)f,C=%(C)f,fit_intercept=%(fit_intercept)s,intercept_scaling=%(intercept_scaling)d,class_weight=%(class_weight)s,random_state=%(random_state)s,solver=%(solver)s,max_iter=%(max_iter)d,multi_class=%(multi_class)s,verbose=%(verbose)d,warm_start=%(warm_start)s,n_jobs=%(n_jobs)s,l1_ratio=%(l1_ratio)s)                      # 实例化模型
lsvc.fit(X_train,y_train)                # 进行模型训练
y_predict = lsvc.predict(X_test)
 
#4.生成结果
print (lsvc.score(X_test,y_test))   # 使用自带的模型评估函数进行准确性评测
# 系数
print('Coefficients: \n', lsvc.coef_)
# 均方误差
print("Mean squared error: %.2f"
      % mean_squared_error(y_test, y_pred))
# Explained variance score: 1 is perfect prediction
print('Variance score: %.2f' % r2_score(y_test, y_pred))


result=lsvc.score(X_test,y_test)
result=[result]
np.savetxt(%(out_path_结果)s,result,fmt='%%f',delimiter=',')



